generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model abastecimento {
  ID                     Int       @id @default(autoincrement())
  VEICULO                Int?
  DATA_ABASTECIMENTO     DateTime? @default(now()) @db.DateTime(0)
  VALOR_GASTO            Decimal   @db.Decimal(10, 2)
  QUANTIDADE_COMBUSTIVEL Decimal   @db.Decimal(10, 2)
  TIPO_COMBUSTIVEL       String    @db.VarChar(50)
  KM_ABASTECIMENTO       Int
  veiculos               veiculos? @relation(fields: [VEICULO], references: [ID], onDelete: Cascade, onUpdate: NoAction, map: "abastecimento_ibfk_1")

  @@index([VEICULO], map: "VEICULO")
}

model custos {
  ID          Int         @id @default(autoincrement())
  VEICULO     Int?
  TIPO_CUSTO  Int?
  VALOR_CUSTO Decimal     @db.Decimal(10, 2)
  DATA_CUSTO  DateTime?   @default(now()) @db.DateTime(0)
  veiculos    veiculos?   @relation(fields: [VEICULO], references: [ID], onDelete: Cascade, onUpdate: NoAction, map: "custos_ibfk_1")
  tipo_custo  tipo_custo? @relation(fields: [TIPO_CUSTO], references: [ID], onDelete: Cascade, onUpdate: NoAction, map: "custos_ibfk_2")

  @@index([TIPO_CUSTO], map: "TIPO_CUSTO")
  @@index([VEICULO], map: "VEICULO")
}

model manutencao {
  ID                      Int              @id @default(autoincrement())
  VEICULO                 Int?
  TIPO_MANUTENCAO         Int?
  DATA_AGENDADA           DateTime         @db.DateTime(0)
  DATA_REALIZADA_ULTIMA   DateTime?        @db.DateTime(0)
  KM_MANUTENCAO           Int
  CUSTO_MANUTENCAO        Decimal          @db.Decimal(10, 2)
  DATA_PROXIMA_MANUTENCAO DateTime         @db.DateTime(0)
  veiculos                veiculos?        @relation(fields: [VEICULO], references: [ID], onDelete: Cascade, onUpdate: NoAction, map: "manutencao_ibfk_1")
  tipo_manutencao         tipo_manutencao? @relation(fields: [TIPO_MANUTENCAO], references: [ID], onDelete: Cascade, onUpdate: NoAction, map: "manutencao_ibfk_2")

  @@index([TIPO_MANUTENCAO], map: "TIPO_MANUTENCAO")
  @@index([VEICULO], map: "VEICULO")
}

model marca {
  ID           Int           @id @default(autoincrement())
  NOME         String?       @db.VarChar(255)
  TIPO_VEICULO TIPO_VEICULO?
  veiculos     veiculos[]
}

model tipo_custo {
  ID     Int      @id @default(autoincrement())
  TIPO   String?  @db.VarChar(255)
  custos custos[]
}

model tipo_manutencao {
  ID         Int          @id @default(autoincrement())
  TIPO       String?      @db.VarChar(255)
  manutencao manutencao[]
}

model veiculos {
  ID               Int               @id @default(autoincrement())
  MARCA_ID         Int?
  MODELO           String            @db.VarChar(255)
  COR              String            @db.VarChar(50)
  ANO_MODELO       Int
  ANO_FABRICACAO   Int
  PLACA_VEICULO    String            @unique(map: "placa_unica") @db.VarChar(10)
  KM_INICIAL       Int
  DATA_CADASTRO    DateTime?         @default(now()) @db.DateTime(0)
  TIPO_COMBUSTIVEL TIPO_COMBUSTIVEL?
  USUARIO_ID       Int?
  TIPO_VEICULO     TIPO_VEICULO?
  abastecimento    abastecimento[]
  custos           custos[]
  manutencao       manutencao[]
  USUARIO          usuarios?         @relation(fields: [USUARIO_ID], references: [ID], onDelete: Cascade, onUpdate: NoAction, map: "fk_usuario")
  marca            marca?            @relation(fields: [MARCA_ID], references: [ID], onDelete: Cascade, onUpdate: NoAction, map: "fk_veiculos_marca")

  @@index([USUARIO_ID], map: "fk_usuario")
  @@index([MARCA_ID], map: "MARCA_ID")
}

model usuarios {
  ID       Int        @id @default(autoincrement())
  NOME     String     @db.VarChar(255)
  CPF      String     @unique(map: "CPF") @db.VarChar(14)
  EMAIL    String     @unique(map: "EMAIL") @db.VarChar(255)
  SENHA    String     @db.VarChar(255)
  veiculos veiculos[]
}

enum TIPO_COMBUSTIVEL {
  GASOLINA
  DIESEL
  GNV
  ELETRICO
  FLEX
  HIBRIDO
}

enum TIPO_VEICULO {
  CARRO
  MOTO
  CAMINHAO
  ONIBUS
  VAN
}
